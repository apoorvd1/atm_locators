buildscript {
    ext {
        springBootVersion = "2.0.0.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6.2"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: "org.sonarqube"
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'
apply plugin: 'findbugs'
apply plugin: 'pmd'

bootJar {
    baseName = 'atm-locations'
    version =  '1.0-SNAPSHOT'
}

group 'atm-locations'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.1.9.RELEASE'
    compile("io.springfox:springfox-swagger-ui:2.4.0")
    compile("io.springfox:springfox-swagger2:2.4.0")
    compile("org.projectlombok:lombok:1.16.10")
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.10'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.5'
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.codehaus.groovy:groovy-all:2.4.1")
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4")
    testCompile("org.spockframework:spock-spring:1.1-groovy-2.4")
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

springBoot {
    buildInfo()
}

test {
    include '**/**Test.*'
    doLast {
        beforeTest {
            descriptor ->
                logger.lifecycle("Running Test: " +descriptor)
        }
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.90
            }
        }
    }
}

checkstyle {
    toolVersion '7.8.1'
    sourceSets = [sourceSets.main]
}

findbugs {
    effort = "max"
    sourceSets = [sourceSets.main]
    reportLevel = "high"
}

pmd {
    ignoreFailures = false
    consoleOutput = true
}

tasks.withType(FindBugs){
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

tasks.withType(Checkstyle){
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

sonarqube{
    properties {
        property "sonar.projectName" , "ATM Locator Services"
        property "sonar.projectKey", "ATM-Locator-Services"
        property "sonar.projectDescription", "Sonar Project for ATM Locators"
        property "sonar.host.url" , "http://localhost:9000"
        property "sonar.exclusions" , "src/main/java/com/adviqo/atm/locations/model/**"
    }
}

project.tasks["sonarqube"].dependsOn "build"